self["webpackHotUpdate_N_E"]("components_Vis_js-node_modules_moment_locale_sync_recursive_",{

/***/ "./components/functions/PrepetratorsByGender.js":
/*!******************************************************!*\
  !*** ./components/functions/PrepetratorsByGender.js ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega */ "./node_modules/vega/build/vega.module.js");
/* harmony import */ var vega_lite_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-lite-api */ "./node_modules/vega-lite-api/src/index.js");
/* harmony import */ var vega_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-lite */ "./node_modules/vega-lite/build/src/index.js");
/* harmony import */ var vega_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-tooltip */ "./node_modules/vega-tooltip/build/vega-tooltip.module.js");
/* module decorator */ module = __webpack_require__.hmd(module);





function perpetratorsByGender(_ref) {
  var dataSet = _ref.dataSet,
      options = _ref.options;
  var gdc = dataSet.gdc,
      gdp = dataSet.gdp;
  var brush = vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.selectInterval() // Brush is a better (vivid?) name than selection in this case!
  .encodings("x"); // limit selection to x-axis (year) values

  var x = vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.x().yearmonth("date");
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.hconcat(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markArea().data(gdc).encode(x, vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.y().fieldQ("count").title("Number of perpetrators"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.color().fieldN("gender").scale({
    scheme: "set1"
  })).params(brush).width(450).height(360), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markArea().data(gdp).encode(x, vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.y().fieldQ("pctg").title("Percentage of perpetrators"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.color().fieldN("gender").scale({
    scheme: "set1"
  })).encode(x.scale({
    domain: brush
  })).width(450).height(360)).config({
    mark: {
      opacity: 0.7
    },
    background: "#1f2937",
    axis: {
      titleFontSize: 13,
      tickColor: "white",
      labelColor: "white",
      titleColor: "white",
      gridColor: "white",
      gridOpacity: 0.6,
      domainColor: "white"
    },
    legend: {
      titleFontSize: 16,
      labelFontSize: 14,
      labelColor: "white",
      titleColor: "white"
    },
    scale: {
      maxSize: 1500
    },
    view: {
      stroke: null
    }
  });
}

var vegaOptions = {
  config: {// Vega-Lite default configuration
  },
  init: function init(view) {
    // initialize tooltip handler
    view.tooltip(new vega_tooltip__WEBPACK_IMPORTED_MODULE_3__.Handler().call);
  },
  view: {
    renderer: "canvas"
  }
};
vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.register(vega__WEBPACK_IMPORTED_MODULE_0__, vega_lite__WEBPACK_IMPORTED_MODULE_2__, vegaOptions);
/* harmony default export */ __webpack_exports__["default"] = (perpetratorsByGender);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9mdW5jdGlvbnMvUHJlcGV0cmF0b3JzQnlHZW5kZXIuanMiXSwibmFtZXMiOlsicGVycGV0cmF0b3JzQnlHZW5kZXIiLCJkYXRhU2V0Iiwib3B0aW9ucyIsImdkYyIsImdkcCIsImJydXNoIiwidmwiLCJlbmNvZGluZ3MiLCJ4IiwieWVhcm1vbnRoIiwiZGF0YSIsImVuY29kZSIsImZpZWxkUSIsInRpdGxlIiwiZmllbGROIiwic2NhbGUiLCJzY2hlbWUiLCJwYXJhbXMiLCJ3aWR0aCIsImhlaWdodCIsImRvbWFpbiIsImNvbmZpZyIsIm1hcmsiLCJvcGFjaXR5IiwiYmFja2dyb3VuZCIsImF4aXMiLCJ0aXRsZUZvbnRTaXplIiwidGlja0NvbG9yIiwibGFiZWxDb2xvciIsInRpdGxlQ29sb3IiLCJncmlkQ29sb3IiLCJncmlkT3BhY2l0eSIsImRvbWFpbkNvbG9yIiwibGVnZW5kIiwibGFiZWxGb250U2l6ZSIsIm1heFNpemUiLCJ2aWV3Iiwic3Ryb2tlIiwidmVnYU9wdGlvbnMiLCJpbml0IiwidG9vbHRpcCIsInZlZ2FUb29sdGlwIiwiY2FsbCIsInJlbmRlcmVyIiwidmVnYSIsInZlZ2FMaXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxvQkFBVCxPQUFvRDtBQUFBLE1BQXBCQyxPQUFvQixRQUFwQkEsT0FBb0I7QUFBQSxNQUFYQyxPQUFXLFFBQVhBLE9BQVc7QUFBQSxNQUMxQ0MsR0FEMEMsR0FDN0JGLE9BRDZCLENBQzFDRSxHQUQwQztBQUFBLE1BQ3JDQyxHQURxQyxHQUM3QkgsT0FENkIsQ0FDckNHLEdBRHFDO0FBRWxELE1BQU1DLEtBQUssR0FBR0MseURBQUEsR0FDTTtBQUROLEdBRVhDLFNBRlcsQ0FFRCxHQUZDLENBQWQsQ0FGa0QsQ0FJL0I7O0FBRW5CLE1BQU1DLENBQUMsR0FBR0YsNENBQUEsR0FBT0csU0FBUCxDQUFpQixNQUFqQixDQUFWO0FBRUEsU0FBT0gsa0RBQUEsQ0FFSEEsbURBQUEsR0FFR0ksSUFGSCxDQUVRUCxHQUZSLEVBR0dRLE1BSEgsQ0FJSUgsQ0FKSixFQUtJRiw0Q0FBQSxHQUFPTSxNQUFQLENBQWMsT0FBZCxFQUF1QkMsS0FBdkIsQ0FBNkIsd0JBQTdCLENBTEosRUFNSVAsZ0RBQUEsR0FBV1EsTUFBWCxDQUFrQixRQUFsQixFQUE0QkMsS0FBNUIsQ0FBa0M7QUFBRUMsVUFBTSxFQUFFO0FBQVYsR0FBbEMsQ0FOSixFQVFHQyxNQVJILENBUVVaLEtBUlYsRUFTR2EsS0FUSCxDQVNTLEdBVFQsRUFVR0MsTUFWSCxDQVVVLEdBVlYsQ0FGRyxFQWFIYixtREFBQSxHQUVHSSxJQUZILENBRVFOLEdBRlIsRUFHR08sTUFISCxDQUlJSCxDQUpKLEVBS0lGLDRDQUFBLEdBQU9NLE1BQVAsQ0FBYyxNQUFkLEVBQXNCQyxLQUF0QixDQUE0Qiw0QkFBNUIsQ0FMSixFQU1JUCxnREFBQSxHQUFXUSxNQUFYLENBQWtCLFFBQWxCLEVBQTRCQyxLQUE1QixDQUFrQztBQUFFQyxVQUFNLEVBQUU7QUFBVixHQUFsQyxDQU5KLEVBUUdMLE1BUkgsQ0FRVUgsQ0FBQyxDQUFDTyxLQUFGLENBQVE7QUFBRUssVUFBTSxFQUFFZjtBQUFWLEdBQVIsQ0FSVixFQVNHYSxLQVRILENBU1MsR0FUVCxFQVVHQyxNQVZILENBVVUsR0FWVixDQWJHLEVBeUJKRSxNQXpCSSxDQXlCRztBQUNOQyxRQUFJLEVBQUU7QUFBRUMsYUFBTyxFQUFFO0FBQVgsS0FEQTtBQUVOQyxjQUFVLEVBQUUsU0FGTjtBQUdOQyxRQUFJLEVBQUU7QUFDSkMsbUJBQWEsRUFBRSxFQURYO0FBRUpDLGVBQVMsRUFBRSxPQUZQO0FBR0pDLGdCQUFVLEVBQUUsT0FIUjtBQUlKQyxnQkFBVSxFQUFFLE9BSlI7QUFLSkMsZUFBUyxFQUFFLE9BTFA7QUFNSkMsaUJBQVcsRUFBRSxHQU5UO0FBT0pDLGlCQUFXLEVBQUU7QUFQVCxLQUhBO0FBWU5DLFVBQU0sRUFBRTtBQUNOUCxtQkFBYSxFQUFFLEVBRFQ7QUFFTlEsbUJBQWEsRUFBRSxFQUZUO0FBR05OLGdCQUFVLEVBQUUsT0FITjtBQUlOQyxnQkFBVSxFQUFFO0FBSk4sS0FaRjtBQWtCTmQsU0FBSyxFQUFFO0FBQUVvQixhQUFPLEVBQUU7QUFBWCxLQWxCRDtBQW1CTkMsUUFBSSxFQUFFO0FBQUVDLFlBQU0sRUFBRTtBQUFWO0FBbkJBLEdBekJILENBQVA7QUE4Q0Q7O0FBRUQsSUFBTUMsV0FBVyxHQUFHO0FBQ2xCakIsUUFBTSxFQUFFLENBQ047QUFETSxHQURVO0FBSWxCa0IsTUFBSSxFQUFFLGNBQUNILElBQUQsRUFBVTtBQUNkO0FBQ0FBLFFBQUksQ0FBQ0ksT0FBTCxDQUFhLElBQUlDLGlEQUFKLEdBQTBCQyxJQUF2QztBQUNELEdBUGlCO0FBUWxCTixNQUFJLEVBQUU7QUFDSk8sWUFBUSxFQUFFO0FBRE47QUFSWSxDQUFwQjtBQVlBckMsbURBQUEsQ0FBWXNDLGlDQUFaLEVBQWtCQyxzQ0FBbEIsRUFBNEJQLFdBQTVCO0FBRUEsK0RBQWV0QyxvQkFBZiIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9jb21wb25lbnRzX1Zpc19qcy1ub2RlX21vZHVsZXNfbW9tZW50X2xvY2FsZV9zeW5jX3JlY3Vyc2l2ZV8uMWVkOGJlYzQ3ZmI0ZTQyZjJiM2IuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHZlZ2EgZnJvbSBcInZlZ2FcIjtcbmltcG9ydCAqIGFzIHZsIGZyb20gXCJ2ZWdhLWxpdGUtYXBpXCI7XG5pbXBvcnQgKiBhcyB2ZWdhTGl0ZSBmcm9tIFwidmVnYS1saXRlXCI7XG5pbXBvcnQgKiBhcyB2ZWdhVG9vbHRpcCBmcm9tIFwidmVnYS10b29sdGlwXCI7XG5cbmZ1bmN0aW9uIHBlcnBldHJhdG9yc0J5R2VuZGVyKHsgZGF0YVNldCwgb3B0aW9ucyB9KSB7XG4gIGNvbnN0IHsgZ2RjLCBnZHAgfSA9IGRhdGFTZXQ7XG4gIGNvbnN0IGJydXNoID0gdmxcbiAgICAuc2VsZWN0SW50ZXJ2YWwoKSAvLyBCcnVzaCBpcyBhIGJldHRlciAodml2aWQ/KSBuYW1lIHRoYW4gc2VsZWN0aW9uIGluIHRoaXMgY2FzZSFcbiAgICAuZW5jb2RpbmdzKFwieFwiKTsgLy8gbGltaXQgc2VsZWN0aW9uIHRvIHgtYXhpcyAoeWVhcikgdmFsdWVzXG5cbiAgY29uc3QgeCA9IHZsLngoKS55ZWFybW9udGgoXCJkYXRlXCIpO1xuXG4gIHJldHVybiB2bFxuICAgIC5oY29uY2F0KFxuICAgICAgdmxcbiAgICAgICAgLm1hcmtBcmVhKClcbiAgICAgICAgLmRhdGEoZ2RjKVxuICAgICAgICAuZW5jb2RlKFxuICAgICAgICAgIHgsXG4gICAgICAgICAgdmwueSgpLmZpZWxkUShcImNvdW50XCIpLnRpdGxlKFwiTnVtYmVyIG9mIHBlcnBldHJhdG9yc1wiKSxcbiAgICAgICAgICB2bC5jb2xvcigpLmZpZWxkTihcImdlbmRlclwiKS5zY2FsZSh7IHNjaGVtZTogXCJzZXQxXCIgfSlcbiAgICAgICAgKVxuICAgICAgICAucGFyYW1zKGJydXNoKVxuICAgICAgICAud2lkdGgoNDUwKVxuICAgICAgICAuaGVpZ2h0KDM2MCksXG4gICAgICB2bFxuICAgICAgICAubWFya0FyZWEoKVxuICAgICAgICAuZGF0YShnZHApXG4gICAgICAgIC5lbmNvZGUoXG4gICAgICAgICAgeCxcbiAgICAgICAgICB2bC55KCkuZmllbGRRKFwicGN0Z1wiKS50aXRsZShcIlBlcmNlbnRhZ2Ugb2YgcGVycGV0cmF0b3JzXCIpLFxuICAgICAgICAgIHZsLmNvbG9yKCkuZmllbGROKFwiZ2VuZGVyXCIpLnNjYWxlKHsgc2NoZW1lOiBcInNldDFcIiB9KVxuICAgICAgICApXG4gICAgICAgIC5lbmNvZGUoeC5zY2FsZSh7IGRvbWFpbjogYnJ1c2ggfSkpXG4gICAgICAgIC53aWR0aCg0NTApXG4gICAgICAgIC5oZWlnaHQoMzYwKVxuICAgIClcbiAgICAuY29uZmlnKHtcbiAgICAgIG1hcms6IHsgb3BhY2l0eTogMC43IH0sXG4gICAgICBiYWNrZ3JvdW5kOiBcIiMxZjI5MzdcIixcbiAgICAgIGF4aXM6IHtcbiAgICAgICAgdGl0bGVGb250U2l6ZTogMTMsXG4gICAgICAgIHRpY2tDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICBsYWJlbENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIHRpdGxlQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgZ3JpZENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIGdyaWRPcGFjaXR5OiAwLjYsXG4gICAgICAgIGRvbWFpbkNvbG9yOiBcIndoaXRlXCIsXG4gICAgICB9LFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIHRpdGxlRm9udFNpemU6IDE2LFxuICAgICAgICBsYWJlbEZvbnRTaXplOiAxNCxcbiAgICAgICAgbGFiZWxDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICB0aXRsZUNvbG9yOiBcIndoaXRlXCIsXG4gICAgICB9LFxuICAgICAgc2NhbGU6IHsgbWF4U2l6ZTogMTUwMCB9LFxuICAgICAgdmlldzogeyBzdHJva2U6IG51bGwgfSxcbiAgICB9KTtcbn1cblxuY29uc3QgdmVnYU9wdGlvbnMgPSB7XG4gIGNvbmZpZzoge1xuICAgIC8vIFZlZ2EtTGl0ZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb25cbiAgfSxcbiAgaW5pdDogKHZpZXcpID0+IHtcbiAgICAvLyBpbml0aWFsaXplIHRvb2x0aXAgaGFuZGxlclxuICAgIHZpZXcudG9vbHRpcChuZXcgdmVnYVRvb2x0aXAuSGFuZGxlcigpLmNhbGwpO1xuICB9LFxuICB2aWV3OiB7XG4gICAgcmVuZGVyZXI6IFwiY2FudmFzXCIsXG4gIH0sXG59O1xudmwucmVnaXN0ZXIodmVnYSwgdmVnYUxpdGUsIHZlZ2FPcHRpb25zKTtcblxuZXhwb3J0IGRlZmF1bHQgcGVycGV0cmF0b3JzQnlHZW5kZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9