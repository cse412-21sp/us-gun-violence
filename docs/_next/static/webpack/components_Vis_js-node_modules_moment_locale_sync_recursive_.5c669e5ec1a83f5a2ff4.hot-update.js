self["webpackHotUpdate_N_E"]("components_Vis_js-node_modules_moment_locale_sync_recursive_",{

/***/ "./components/functions/tweetmapWA.js":
/*!********************************************!*\
  !*** ./components/functions/tweetmapWA.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega */ "./node_modules/vega/build/vega.module.js");
/* harmony import */ var vega_lite_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-lite-api */ "./node_modules/vega-lite-api/src/index.js");
/* harmony import */ var vega_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-lite */ "./node_modules/vega-lite/build/src/index.js");
/* harmony import */ var vega_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-tooltip */ "./node_modules/vega-tooltip/build/vega-tooltip.module.js");
/* module decorator */ module = __webpack_require__.hmd(module);





function perpetratorMap(_ref) {
  var dataSet = _ref.dataSet,
      options = _ref.options;
  var wa = dataSet.wa,
      polar = dataSet.polar;
  var titles = {
    mean_age: "Perpetrators mean age",
    underages_ratio: ["Percentage of underage/total", "perpetrators"],
    male_pctg: ["Percentage of ", "male perpetrators"],
    female_pctg: ["Percentage of ", "female perpetrators"]
  };
  var schemes = {
    mean_age: "goldred",
    underages_ratio: "yellowgreenblue",
    male_pctg: "tealblues",
    female_pctg: "redpurple"
  };
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.layer(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markGeoshape({
    fill: "#374151",
    stroke: "#fff",
    strokeWidth: 1
  }).data(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.topojson(wa).feature("counties")), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markCircle({
    stroke: "#white"
  }).data(polar).encode(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.latitude().fieldQ("latitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.longitude().fieldQ("longitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.color().fieldQ("comp").legend({
    titleLineHeight: 10
  }), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.size().fieldQ("n_killed").title(["Perpetrators/", "1M population/year"]), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.tooltip([vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldN("city_or_county"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldQ("comp")]), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.opacity()["if"](select, vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.value(1)).value(0.2)));
}

function perpetratorMapFull(_ref2) {
  var dataSet = _ref2.dataSet,
      options = _ref2.options;
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.hconcat(perpetratorMap({
    dataSet: dataSet,
    options: options
  }).height(500).width(720)).config({
    mark: {
      opacity: 0.9
    },
    background: "#1f2937",
    axis: {
      titleFontSize: 16,
      tickColor: "white",
      labelColor: "white",
      titleColor: "white",
      gridColor: "white",
      domainColor: "white"
    },
    legend: {
      titleFontSize: 14,
      labelFontSize: 12,
      labelColor: "white",
      titleColor: "white",
      symbolFillColor: "#6b7280",
      symbolStrokeColor: "white"
    },
    scale: {
      maxSize: 1500
    },
    view: {
      stroke: null
    }
  });
}

var vegaOptions = {
  config: {// Vega-Lite default configuration
  },
  init: function init(view) {
    // initialize tooltip handler
    view.tooltip(new vega_tooltip__WEBPACK_IMPORTED_MODULE_3__.Handler().call);
  },
  view: {
    renderer: "canvas"
  }
};
vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.register(vega__WEBPACK_IMPORTED_MODULE_0__, vega_lite__WEBPACK_IMPORTED_MODULE_2__, vegaOptions);
/* harmony default export */ __webpack_exports__["default"] = (perpetratorMapFull);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9mdW5jdGlvbnMvdHdlZXRtYXBXQS5qcyJdLCJuYW1lcyI6WyJwZXJwZXRyYXRvck1hcCIsImRhdGFTZXQiLCJvcHRpb25zIiwid2EiLCJwb2xhciIsInRpdGxlcyIsIm1lYW5fYWdlIiwidW5kZXJhZ2VzX3JhdGlvIiwibWFsZV9wY3RnIiwiZmVtYWxlX3BjdGciLCJzY2hlbWVzIiwidmwiLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJkYXRhIiwiZmVhdHVyZSIsImVuY29kZSIsImZpZWxkUSIsImxlZ2VuZCIsInRpdGxlTGluZUhlaWdodCIsInRpdGxlIiwic2VsZWN0IiwidmFsdWUiLCJwZXJwZXRyYXRvck1hcEZ1bGwiLCJoZWlnaHQiLCJ3aWR0aCIsImNvbmZpZyIsIm1hcmsiLCJvcGFjaXR5IiwiYmFja2dyb3VuZCIsImF4aXMiLCJ0aXRsZUZvbnRTaXplIiwidGlja0NvbG9yIiwibGFiZWxDb2xvciIsInRpdGxlQ29sb3IiLCJncmlkQ29sb3IiLCJkb21haW5Db2xvciIsImxhYmVsRm9udFNpemUiLCJzeW1ib2xGaWxsQ29sb3IiLCJzeW1ib2xTdHJva2VDb2xvciIsInNjYWxlIiwibWF4U2l6ZSIsInZpZXciLCJ2ZWdhT3B0aW9ucyIsImluaXQiLCJ0b29sdGlwIiwidmVnYVRvb2x0aXAiLCJjYWxsIiwicmVuZGVyZXIiLCJ2ZWdhIiwidmVnYUxpdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLGNBQVQsT0FBOEM7QUFBQSxNQUFwQkMsT0FBb0IsUUFBcEJBLE9BQW9CO0FBQUEsTUFBWEMsT0FBVyxRQUFYQSxPQUFXO0FBQUEsTUFDcENDLEVBRG9DLEdBQ3RCRixPQURzQixDQUNwQ0UsRUFEb0M7QUFBQSxNQUNoQ0MsS0FEZ0MsR0FDdEJILE9BRHNCLENBQ2hDRyxLQURnQztBQUU1QyxNQUFNQyxNQUFNLEdBQUc7QUFDYkMsWUFBUSxFQUFFLHVCQURHO0FBRWJDLG1CQUFlLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxjQUFqQyxDQUZKO0FBR2JDLGFBQVMsRUFBRSxDQUFDLGdCQUFELEVBQW1CLG1CQUFuQixDQUhFO0FBSWJDLGVBQVcsRUFBRSxDQUFDLGdCQUFELEVBQW1CLHFCQUFuQjtBQUpBLEdBQWY7QUFPQSxNQUFNQyxPQUFPLEdBQUc7QUFDZEosWUFBUSxFQUFFLFNBREk7QUFFZEMsbUJBQWUsRUFBRSxpQkFGSDtBQUdkQyxhQUFTLEVBQUUsV0FIRztBQUlkQyxlQUFXLEVBQUU7QUFKQyxHQUFoQjtBQU9BLFNBQU9FLGdEQUFBLENBQ0xBLHVEQUFBLENBQ2dCO0FBQUVDLFFBQUksRUFBRSxTQUFSO0FBQW1CQyxVQUFNLEVBQUUsTUFBM0I7QUFBbUNDLGVBQVcsRUFBRTtBQUFoRCxHQURoQixFQUVHQyxJQUZILENBRVFKLG1EQUFBLENBQVlSLEVBQVosRUFBZ0JhLE9BQWhCLENBQXdCLFVBQXhCLENBRlIsQ0FESyxFQUlMTCxxREFBQSxDQUNjO0FBQUVFLFVBQU0sRUFBRTtBQUFWLEdBRGQsRUFFR0UsSUFGSCxDQUVRWCxLQUZSLEVBR0dhLE1BSEgsQ0FJSU4sbURBQUEsR0FBY08sTUFBZCxDQUFxQixVQUFyQixDQUpKLEVBS0lQLG9EQUFBLEdBQWVPLE1BQWYsQ0FBc0IsV0FBdEIsQ0FMSixFQU1JUCxnREFBQSxHQUFXTyxNQUFYLENBQWtCLE1BQWxCLEVBQTBCQyxNQUExQixDQUFpQztBQUFFQyxtQkFBZSxFQUFFO0FBQW5CLEdBQWpDLENBTkosRUFPSVQsK0NBQUEsR0FFR08sTUFGSCxDQUVVLFVBRlYsRUFHR0csS0FISCxDQUdTLENBQUMsZUFBRCxFQUFrQixvQkFBbEIsQ0FIVCxDQVBKLEVBV0lWLGtEQUFBLENBQVcsQ0FBQ0EsaURBQUEsQ0FBVSxnQkFBVixDQUFELEVBQThCQSxpREFBQSxDQUFVLE1BQVYsQ0FBOUIsQ0FBWCxDQVhKLEVBWUlBLGtEQUFBLFNBQWdCVyxNQUFoQixFQUF3QlgsZ0RBQUEsQ0FBUyxDQUFULENBQXhCLEVBQXFDWSxLQUFyQyxDQUEyQyxHQUEzQyxDQVpKLENBSkssQ0FBUDtBQW1CRDs7QUFFRCxTQUFTQyxrQkFBVCxRQUFrRDtBQUFBLE1BQXBCdkIsT0FBb0IsU0FBcEJBLE9BQW9CO0FBQUEsTUFBWEMsT0FBVyxTQUFYQSxPQUFXO0FBQ2hELFNBQU9TLGtEQUFBLENBQ0lYLGNBQWMsQ0FBQztBQUFFQyxXQUFPLEVBQVBBLE9BQUY7QUFBV0MsV0FBTyxFQUFQQTtBQUFYLEdBQUQsQ0FBZCxDQUFxQ3VCLE1BQXJDLENBQTRDLEdBQTVDLEVBQWlEQyxLQUFqRCxDQUF1RCxHQUF2RCxDQURKLEVBRUpDLE1BRkksQ0FFRztBQUNOQyxRQUFJLEVBQUU7QUFBRUMsYUFBTyxFQUFFO0FBQVgsS0FEQTtBQUVOQyxjQUFVLEVBQUUsU0FGTjtBQUdOQyxRQUFJLEVBQUU7QUFDSkMsbUJBQWEsRUFBRSxFQURYO0FBRUpDLGVBQVMsRUFBRSxPQUZQO0FBR0pDLGdCQUFVLEVBQUUsT0FIUjtBQUlKQyxnQkFBVSxFQUFFLE9BSlI7QUFLSkMsZUFBUyxFQUFFLE9BTFA7QUFNSkMsaUJBQVcsRUFBRTtBQU5ULEtBSEE7QUFXTmxCLFVBQU0sRUFBRTtBQUNOYSxtQkFBYSxFQUFFLEVBRFQ7QUFFTk0sbUJBQWEsRUFBRSxFQUZUO0FBR05KLGdCQUFVLEVBQUUsT0FITjtBQUlOQyxnQkFBVSxFQUFFLE9BSk47QUFLTkkscUJBQWUsRUFBRSxTQUxYO0FBTU5DLHVCQUFpQixFQUFFO0FBTmIsS0FYRjtBQW1CTkMsU0FBSyxFQUFFO0FBQUVDLGFBQU8sRUFBRTtBQUFYLEtBbkJEO0FBb0JOQyxRQUFJLEVBQUU7QUFBRTlCLFlBQU0sRUFBRTtBQUFWO0FBcEJBLEdBRkgsQ0FBUDtBQXdCRDs7QUFFRCxJQUFNK0IsV0FBVyxHQUFHO0FBQ2xCakIsUUFBTSxFQUFFLENBQ047QUFETSxHQURVO0FBSWxCa0IsTUFBSSxFQUFFLGNBQUNGLElBQUQsRUFBVTtBQUNkO0FBQ0FBLFFBQUksQ0FBQ0csT0FBTCxDQUFhLElBQUlDLGlEQUFKLEdBQTBCQyxJQUF2QztBQUNELEdBUGlCO0FBUWxCTCxNQUFJLEVBQUU7QUFDSk0sWUFBUSxFQUFFO0FBRE47QUFSWSxDQUFwQjtBQVlBdEMsbURBQUEsQ0FBWXVDLGlDQUFaLEVBQWtCQyxzQ0FBbEIsRUFBNEJQLFdBQTVCO0FBRUEsK0RBQWVwQixrQkFBZiIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9jb21wb25lbnRzX1Zpc19qcy1ub2RlX21vZHVsZXNfbW9tZW50X2xvY2FsZV9zeW5jX3JlY3Vyc2l2ZV8uNWM2NjllNWVjMWE4M2Y1YTJmZjQuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHZlZ2EgZnJvbSBcInZlZ2FcIjtcbmltcG9ydCAqIGFzIHZsIGZyb20gXCJ2ZWdhLWxpdGUtYXBpXCI7XG5pbXBvcnQgKiBhcyB2ZWdhTGl0ZSBmcm9tIFwidmVnYS1saXRlXCI7XG5pbXBvcnQgKiBhcyB2ZWdhVG9vbHRpcCBmcm9tIFwidmVnYS10b29sdGlwXCI7XG5cbmZ1bmN0aW9uIHBlcnBldHJhdG9yTWFwKHsgZGF0YVNldCwgb3B0aW9ucyB9KSB7XG4gIGNvbnN0IHsgd2EsIHBvbGFyIH0gPSBkYXRhU2V0O1xuICBjb25zdCB0aXRsZXMgPSB7XG4gICAgbWVhbl9hZ2U6IFwiUGVycGV0cmF0b3JzIG1lYW4gYWdlXCIsXG4gICAgdW5kZXJhZ2VzX3JhdGlvOiBbXCJQZXJjZW50YWdlIG9mIHVuZGVyYWdlL3RvdGFsXCIsIFwicGVycGV0cmF0b3JzXCJdLFxuICAgIG1hbGVfcGN0ZzogW1wiUGVyY2VudGFnZSBvZiBcIiwgXCJtYWxlIHBlcnBldHJhdG9yc1wiXSxcbiAgICBmZW1hbGVfcGN0ZzogW1wiUGVyY2VudGFnZSBvZiBcIiwgXCJmZW1hbGUgcGVycGV0cmF0b3JzXCJdLFxuICB9O1xuXG4gIGNvbnN0IHNjaGVtZXMgPSB7XG4gICAgbWVhbl9hZ2U6IFwiZ29sZHJlZFwiLFxuICAgIHVuZGVyYWdlc19yYXRpbzogXCJ5ZWxsb3dncmVlbmJsdWVcIixcbiAgICBtYWxlX3BjdGc6IFwidGVhbGJsdWVzXCIsXG4gICAgZmVtYWxlX3BjdGc6IFwicmVkcHVycGxlXCIsXG4gIH07XG5cbiAgcmV0dXJuIHZsLmxheWVyKFxuICAgIHZsXG4gICAgICAubWFya0dlb3NoYXBlKHsgZmlsbDogXCIjMzc0MTUxXCIsIHN0cm9rZTogXCIjZmZmXCIsIHN0cm9rZVdpZHRoOiAxIH0pXG4gICAgICAuZGF0YSh2bC50b3BvanNvbih3YSkuZmVhdHVyZShcImNvdW50aWVzXCIpKSxcbiAgICB2bFxuICAgICAgLm1hcmtDaXJjbGUoeyBzdHJva2U6IFwiI3doaXRlXCIgfSlcbiAgICAgIC5kYXRhKHBvbGFyKVxuICAgICAgLmVuY29kZShcbiAgICAgICAgdmwubGF0aXR1ZGUoKS5maWVsZFEoXCJsYXRpdHVkZVwiKSxcbiAgICAgICAgdmwubG9uZ2l0dWRlKCkuZmllbGRRKFwibG9uZ2l0dWRlXCIpLFxuICAgICAgICB2bC5jb2xvcigpLmZpZWxkUShcImNvbXBcIikubGVnZW5kKHsgdGl0bGVMaW5lSGVpZ2h0OiAxMCB9KSxcbiAgICAgICAgdmxcbiAgICAgICAgICAuc2l6ZSgpXG4gICAgICAgICAgLmZpZWxkUShcIm5fa2lsbGVkXCIpXG4gICAgICAgICAgLnRpdGxlKFtcIlBlcnBldHJhdG9ycy9cIiwgXCIxTSBwb3B1bGF0aW9uL3llYXJcIl0pLFxuICAgICAgICB2bC50b29sdGlwKFt2bC5maWVsZE4oXCJjaXR5X29yX2NvdW50eVwiKSwgdmwuZmllbGRRKFwiY29tcFwiKV0pLFxuICAgICAgICB2bC5vcGFjaXR5KCkuaWYoc2VsZWN0LCB2bC52YWx1ZSgxKSkudmFsdWUoMC4yKVxuICAgICAgKVxuICApO1xufVxuXG5mdW5jdGlvbiBwZXJwZXRyYXRvck1hcEZ1bGwoeyBkYXRhU2V0LCBvcHRpb25zIH0pIHtcbiAgcmV0dXJuIHZsXG4gICAgLmhjb25jYXQocGVycGV0cmF0b3JNYXAoeyBkYXRhU2V0LCBvcHRpb25zIH0pLmhlaWdodCg1MDApLndpZHRoKDcyMCkpXG4gICAgLmNvbmZpZyh7XG4gICAgICBtYXJrOiB7IG9wYWNpdHk6IDAuOSB9LFxuICAgICAgYmFja2dyb3VuZDogXCIjMWYyOTM3XCIsXG4gICAgICBheGlzOiB7XG4gICAgICAgIHRpdGxlRm9udFNpemU6IDE2LFxuICAgICAgICB0aWNrQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgbGFiZWxDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICB0aXRsZUNvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIGdyaWRDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICBkb21haW5Db2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgfSxcbiAgICAgIGxlZ2VuZDoge1xuICAgICAgICB0aXRsZUZvbnRTaXplOiAxNCxcbiAgICAgICAgbGFiZWxGb250U2l6ZTogMTIsXG4gICAgICAgIGxhYmVsQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgdGl0bGVDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICBzeW1ib2xGaWxsQ29sb3I6IFwiIzZiNzI4MFwiLFxuICAgICAgICBzeW1ib2xTdHJva2VDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgfSxcbiAgICAgIHNjYWxlOiB7IG1heFNpemU6IDE1MDAgfSxcbiAgICAgIHZpZXc6IHsgc3Ryb2tlOiBudWxsIH0sXG4gICAgfSk7XG59XG5cbmNvbnN0IHZlZ2FPcHRpb25zID0ge1xuICBjb25maWc6IHtcbiAgICAvLyBWZWdhLUxpdGUgZGVmYXVsdCBjb25maWd1cmF0aW9uXG4gIH0sXG4gIGluaXQ6ICh2aWV3KSA9PiB7XG4gICAgLy8gaW5pdGlhbGl6ZSB0b29sdGlwIGhhbmRsZXJcbiAgICB2aWV3LnRvb2x0aXAobmV3IHZlZ2FUb29sdGlwLkhhbmRsZXIoKS5jYWxsKTtcbiAgfSxcbiAgdmlldzoge1xuICAgIHJlbmRlcmVyOiBcImNhbnZhc1wiLFxuICB9LFxufTtcbnZsLnJlZ2lzdGVyKHZlZ2EsIHZlZ2FMaXRlLCB2ZWdhT3B0aW9ucyk7XG5cbmV4cG9ydCBkZWZhdWx0IHBlcnBldHJhdG9yTWFwRnVsbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=