self["webpackHotUpdate_N_E"]("components_Vis_js-node_modules_moment_locale_sync_recursive_",{

/***/ "./components/functions/tweetmapWA.js":
/*!********************************************!*\
  !*** ./components/functions/tweetmapWA.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega */ "./node_modules/vega/build/vega.module.js");
/* harmony import */ var vega_lite_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-lite-api */ "./node_modules/vega-lite-api/src/index.js");
/* harmony import */ var vega_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-lite */ "./node_modules/vega-lite/build/src/index.js");
/* harmony import */ var vega_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-tooltip */ "./node_modules/vega-tooltip/build/vega-tooltip.module.js");
/* module decorator */ module = __webpack_require__.hmd(module);





function perpetratorMap(_ref) {
  var dataSet = _ref.dataSet,
      options = _ref.options;
  var wa = dataSet.wa,
      polar = dataSet.polar,
      usa = dataSet.usa;
  var titles = {
    mean_age: "Perpetrators mean age",
    underages_ratio: ["Percentage of underage/total", "perpetrators"],
    male_pctg: ["Percentage of ", "male perpetrators"],
    female_pctg: ["Percentage of ", "female perpetrators"]
  };
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.layer(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markGeoshape({
    fill: "#374151",
    stroke: "#fff",
    strokeWidth: 1
  }).data(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.topojson(usa).feature("counties")), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markCircle({
    stroke: "#white"
  }).data(polar).transform(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.filter("datum[city_or_county]")).encode(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.latitude().fieldQ("latitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.longitude().fieldQ("longitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.color().fieldQ("comp").legend({
    titleLineHeight: 10
  }).scale({
    scheme: "redblue"
  }), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.size().fieldQ("n_killed").title(["Perpetrators/", "1M population/year"]), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.tooltip([vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldN("city_or_county"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldQ("comp")])));
}

function perpetratorMapFull(_ref2) {
  var dataSet = _ref2.dataSet,
      options = _ref2.options;
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.hconcat(perpetratorMap({
    dataSet: dataSet,
    options: options
  }).height(500).width(720)).config({
    mark: {
      opacity: 0.9
    },
    background: "#1f2937",
    axis: {
      titleFontSize: 16,
      tickColor: "white",
      labelColor: "white",
      titleColor: "white",
      gridColor: "white",
      domainColor: "white"
    },
    legend: {
      titleFontSize: 14,
      labelFontSize: 12,
      labelColor: "white",
      titleColor: "white",
      symbolFillColor: "#6b7280",
      symbolStrokeColor: "white"
    },
    scale: {
      maxSize: 50
    },
    view: {
      stroke: null
    }
  });
}

var vegaOptions = {
  config: {// Vega-Lite default configuration
  },
  init: function init(view) {
    // initialize tooltip handler
    view.tooltip(new vega_tooltip__WEBPACK_IMPORTED_MODULE_3__.Handler().call);
  },
  view: {
    renderer: "canvas"
  }
};
vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.register(vega__WEBPACK_IMPORTED_MODULE_0__, vega_lite__WEBPACK_IMPORTED_MODULE_2__, vegaOptions);
/* harmony default export */ __webpack_exports__["default"] = (perpetratorMapFull);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9mdW5jdGlvbnMvdHdlZXRtYXBXQS5qcyJdLCJuYW1lcyI6WyJwZXJwZXRyYXRvck1hcCIsImRhdGFTZXQiLCJvcHRpb25zIiwid2EiLCJwb2xhciIsInVzYSIsInRpdGxlcyIsIm1lYW5fYWdlIiwidW5kZXJhZ2VzX3JhdGlvIiwibWFsZV9wY3RnIiwiZmVtYWxlX3BjdGciLCJ2bCIsImZpbGwiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsImRhdGEiLCJmZWF0dXJlIiwidHJhbnNmb3JtIiwiZW5jb2RlIiwiZmllbGRRIiwibGVnZW5kIiwidGl0bGVMaW5lSGVpZ2h0Iiwic2NhbGUiLCJzY2hlbWUiLCJ0aXRsZSIsInBlcnBldHJhdG9yTWFwRnVsbCIsImhlaWdodCIsIndpZHRoIiwiY29uZmlnIiwibWFyayIsIm9wYWNpdHkiLCJiYWNrZ3JvdW5kIiwiYXhpcyIsInRpdGxlRm9udFNpemUiLCJ0aWNrQ29sb3IiLCJsYWJlbENvbG9yIiwidGl0bGVDb2xvciIsImdyaWRDb2xvciIsImRvbWFpbkNvbG9yIiwibGFiZWxGb250U2l6ZSIsInN5bWJvbEZpbGxDb2xvciIsInN5bWJvbFN0cm9rZUNvbG9yIiwibWF4U2l6ZSIsInZpZXciLCJ2ZWdhT3B0aW9ucyIsImluaXQiLCJ0b29sdGlwIiwidmVnYVRvb2x0aXAiLCJjYWxsIiwicmVuZGVyZXIiLCJ2ZWdhIiwidmVnYUxpdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLGNBQVQsT0FBOEM7QUFBQSxNQUFwQkMsT0FBb0IsUUFBcEJBLE9BQW9CO0FBQUEsTUFBWEMsT0FBVyxRQUFYQSxPQUFXO0FBQUEsTUFDcENDLEVBRG9DLEdBQ2pCRixPQURpQixDQUNwQ0UsRUFEb0M7QUFBQSxNQUNoQ0MsS0FEZ0MsR0FDakJILE9BRGlCLENBQ2hDRyxLQURnQztBQUFBLE1BQ3pCQyxHQUR5QixHQUNqQkosT0FEaUIsQ0FDekJJLEdBRHlCO0FBRTVDLE1BQU1DLE1BQU0sR0FBRztBQUNiQyxZQUFRLEVBQUUsdUJBREc7QUFFYkMsbUJBQWUsRUFBRSxDQUFDLDhCQUFELEVBQWlDLGNBQWpDLENBRko7QUFHYkMsYUFBUyxFQUFFLENBQUMsZ0JBQUQsRUFBbUIsbUJBQW5CLENBSEU7QUFJYkMsZUFBVyxFQUFFLENBQUMsZ0JBQUQsRUFBbUIscUJBQW5CO0FBSkEsR0FBZjtBQU9BLFNBQU9DLGdEQUFBLENBQ0xBLHVEQUFBLENBQ2dCO0FBQUVDLFFBQUksRUFBRSxTQUFSO0FBQW1CQyxVQUFNLEVBQUUsTUFBM0I7QUFBbUNDLGVBQVcsRUFBRTtBQUFoRCxHQURoQixFQUVHQyxJQUZILENBRVFKLG1EQUFBLENBQVlOLEdBQVosRUFBaUJXLE9BQWpCLENBQXlCLFVBQXpCLENBRlIsQ0FESyxFQUlMTCxxREFBQSxDQUNjO0FBQUVFLFVBQU0sRUFBRTtBQUFWLEdBRGQsRUFFR0UsSUFGSCxDQUVRWCxLQUZSLEVBR0dhLFNBSEgsQ0FHYU4saURBQUEsQ0FBVSx1QkFBVixDQUhiLEVBSUdPLE1BSkgsQ0FLSVAsbURBQUEsR0FBY1EsTUFBZCxDQUFxQixVQUFyQixDQUxKLEVBTUlSLG9EQUFBLEdBQWVRLE1BQWYsQ0FBc0IsV0FBdEIsQ0FOSixFQU9JUixnREFBQSxHQUVHUSxNQUZILENBRVUsTUFGVixFQUdHQyxNQUhILENBR1U7QUFBRUMsbUJBQWUsRUFBRTtBQUFuQixHQUhWLEVBSUdDLEtBSkgsQ0FJUztBQUFFQyxVQUFNLEVBQUU7QUFBVixHQUpULENBUEosRUFZSVosK0NBQUEsR0FFR1EsTUFGSCxDQUVVLFVBRlYsRUFHR0ssS0FISCxDQUdTLENBQUMsZUFBRCxFQUFrQixvQkFBbEIsQ0FIVCxDQVpKLEVBZ0JJYixrREFBQSxDQUFXLENBQUNBLGlEQUFBLENBQVUsZ0JBQVYsQ0FBRCxFQUE4QkEsaURBQUEsQ0FBVSxNQUFWLENBQTlCLENBQVgsQ0FoQkosQ0FKSyxDQUFQO0FBdUJEOztBQUVELFNBQVNjLGtCQUFULFFBQWtEO0FBQUEsTUFBcEJ4QixPQUFvQixTQUFwQkEsT0FBb0I7QUFBQSxNQUFYQyxPQUFXLFNBQVhBLE9BQVc7QUFDaEQsU0FBT1Msa0RBQUEsQ0FDSVgsY0FBYyxDQUFDO0FBQUVDLFdBQU8sRUFBUEEsT0FBRjtBQUFXQyxXQUFPLEVBQVBBO0FBQVgsR0FBRCxDQUFkLENBQXFDd0IsTUFBckMsQ0FBNEMsR0FBNUMsRUFBaURDLEtBQWpELENBQXVELEdBQXZELENBREosRUFFSkMsTUFGSSxDQUVHO0FBQ05DLFFBQUksRUFBRTtBQUFFQyxhQUFPLEVBQUU7QUFBWCxLQURBO0FBRU5DLGNBQVUsRUFBRSxTQUZOO0FBR05DLFFBQUksRUFBRTtBQUNKQyxtQkFBYSxFQUFFLEVBRFg7QUFFSkMsZUFBUyxFQUFFLE9BRlA7QUFHSkMsZ0JBQVUsRUFBRSxPQUhSO0FBSUpDLGdCQUFVLEVBQUUsT0FKUjtBQUtKQyxlQUFTLEVBQUUsT0FMUDtBQU1KQyxpQkFBVyxFQUFFO0FBTlQsS0FIQTtBQVdObEIsVUFBTSxFQUFFO0FBQ05hLG1CQUFhLEVBQUUsRUFEVDtBQUVOTSxtQkFBYSxFQUFFLEVBRlQ7QUFHTkosZ0JBQVUsRUFBRSxPQUhOO0FBSU5DLGdCQUFVLEVBQUUsT0FKTjtBQUtOSSxxQkFBZSxFQUFFLFNBTFg7QUFNTkMsdUJBQWlCLEVBQUU7QUFOYixLQVhGO0FBbUJObkIsU0FBSyxFQUFFO0FBQUVvQixhQUFPLEVBQUU7QUFBWCxLQW5CRDtBQW9CTkMsUUFBSSxFQUFFO0FBQUU5QixZQUFNLEVBQUU7QUFBVjtBQXBCQSxHQUZILENBQVA7QUF3QkQ7O0FBRUQsSUFBTStCLFdBQVcsR0FBRztBQUNsQmhCLFFBQU0sRUFBRSxDQUNOO0FBRE0sR0FEVTtBQUlsQmlCLE1BQUksRUFBRSxjQUFDRixJQUFELEVBQVU7QUFDZDtBQUNBQSxRQUFJLENBQUNHLE9BQUwsQ0FBYSxJQUFJQyxpREFBSixHQUEwQkMsSUFBdkM7QUFDRCxHQVBpQjtBQVFsQkwsTUFBSSxFQUFFO0FBQ0pNLFlBQVEsRUFBRTtBQUROO0FBUlksQ0FBcEI7QUFZQXRDLG1EQUFBLENBQVl1QyxpQ0FBWixFQUFrQkMsc0NBQWxCLEVBQTRCUCxXQUE1QjtBQUVBLCtEQUFlbkIsa0JBQWYiLCJmaWxlIjoic3RhdGljL3dlYnBhY2svY29tcG9uZW50c19WaXNfanMtbm9kZV9tb2R1bGVzX21vbWVudF9sb2NhbGVfc3luY19yZWN1cnNpdmVfLmVmYjdlOWFiYTJjZDc0NjdiNTYyLmhvdC11cGRhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB2ZWdhIGZyb20gXCJ2ZWdhXCI7XG5pbXBvcnQgKiBhcyB2bCBmcm9tIFwidmVnYS1saXRlLWFwaVwiO1xuaW1wb3J0ICogYXMgdmVnYUxpdGUgZnJvbSBcInZlZ2EtbGl0ZVwiO1xuaW1wb3J0ICogYXMgdmVnYVRvb2x0aXAgZnJvbSBcInZlZ2EtdG9vbHRpcFwiO1xuXG5mdW5jdGlvbiBwZXJwZXRyYXRvck1hcCh7IGRhdGFTZXQsIG9wdGlvbnMgfSkge1xuICBjb25zdCB7IHdhLCBwb2xhciwgdXNhIH0gPSBkYXRhU2V0O1xuICBjb25zdCB0aXRsZXMgPSB7XG4gICAgbWVhbl9hZ2U6IFwiUGVycGV0cmF0b3JzIG1lYW4gYWdlXCIsXG4gICAgdW5kZXJhZ2VzX3JhdGlvOiBbXCJQZXJjZW50YWdlIG9mIHVuZGVyYWdlL3RvdGFsXCIsIFwicGVycGV0cmF0b3JzXCJdLFxuICAgIG1hbGVfcGN0ZzogW1wiUGVyY2VudGFnZSBvZiBcIiwgXCJtYWxlIHBlcnBldHJhdG9yc1wiXSxcbiAgICBmZW1hbGVfcGN0ZzogW1wiUGVyY2VudGFnZSBvZiBcIiwgXCJmZW1hbGUgcGVycGV0cmF0b3JzXCJdLFxuICB9O1xuXG4gIHJldHVybiB2bC5sYXllcihcbiAgICB2bFxuICAgICAgLm1hcmtHZW9zaGFwZSh7IGZpbGw6IFwiIzM3NDE1MVwiLCBzdHJva2U6IFwiI2ZmZlwiLCBzdHJva2VXaWR0aDogMSB9KVxuICAgICAgLmRhdGEodmwudG9wb2pzb24odXNhKS5mZWF0dXJlKFwiY291bnRpZXNcIikpLFxuICAgIHZsXG4gICAgICAubWFya0NpcmNsZSh7IHN0cm9rZTogXCIjd2hpdGVcIiB9KVxuICAgICAgLmRhdGEocG9sYXIpXG4gICAgICAudHJhbnNmb3JtKHZsLmZpbHRlcihcImRhdHVtW2NpdHlfb3JfY291bnR5XVwiKSlcbiAgICAgIC5lbmNvZGUoXG4gICAgICAgIHZsLmxhdGl0dWRlKCkuZmllbGRRKFwibGF0aXR1ZGVcIiksXG4gICAgICAgIHZsLmxvbmdpdHVkZSgpLmZpZWxkUShcImxvbmdpdHVkZVwiKSxcbiAgICAgICAgdmxcbiAgICAgICAgICAuY29sb3IoKVxuICAgICAgICAgIC5maWVsZFEoXCJjb21wXCIpXG4gICAgICAgICAgLmxlZ2VuZCh7IHRpdGxlTGluZUhlaWdodDogMTAgfSlcbiAgICAgICAgICAuc2NhbGUoeyBzY2hlbWU6IFwicmVkYmx1ZVwiIH0pLFxuICAgICAgICB2bFxuICAgICAgICAgIC5zaXplKClcbiAgICAgICAgICAuZmllbGRRKFwibl9raWxsZWRcIilcbiAgICAgICAgICAudGl0bGUoW1wiUGVycGV0cmF0b3JzL1wiLCBcIjFNIHBvcHVsYXRpb24veWVhclwiXSksXG4gICAgICAgIHZsLnRvb2x0aXAoW3ZsLmZpZWxkTihcImNpdHlfb3JfY291bnR5XCIpLCB2bC5maWVsZFEoXCJjb21wXCIpXSlcbiAgICAgIClcbiAgKTtcbn1cblxuZnVuY3Rpb24gcGVycGV0cmF0b3JNYXBGdWxsKHsgZGF0YVNldCwgb3B0aW9ucyB9KSB7XG4gIHJldHVybiB2bFxuICAgIC5oY29uY2F0KHBlcnBldHJhdG9yTWFwKHsgZGF0YVNldCwgb3B0aW9ucyB9KS5oZWlnaHQoNTAwKS53aWR0aCg3MjApKVxuICAgIC5jb25maWcoe1xuICAgICAgbWFyazogeyBvcGFjaXR5OiAwLjkgfSxcbiAgICAgIGJhY2tncm91bmQ6IFwiIzFmMjkzN1wiLFxuICAgICAgYXhpczoge1xuICAgICAgICB0aXRsZUZvbnRTaXplOiAxNixcbiAgICAgICAgdGlja0NvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIGxhYmVsQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgdGl0bGVDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICBncmlkQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgZG9tYWluQ29sb3I6IFwid2hpdGVcIixcbiAgICAgIH0sXG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgdGl0bGVGb250U2l6ZTogMTQsXG4gICAgICAgIGxhYmVsRm9udFNpemU6IDEyLFxuICAgICAgICBsYWJlbENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIHRpdGxlQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgc3ltYm9sRmlsbENvbG9yOiBcIiM2YjcyODBcIixcbiAgICAgICAgc3ltYm9sU3Ryb2tlQ29sb3I6IFwid2hpdGVcIixcbiAgICAgIH0sXG4gICAgICBzY2FsZTogeyBtYXhTaXplOiA1MCB9LFxuICAgICAgdmlldzogeyBzdHJva2U6IG51bGwgfSxcbiAgICB9KTtcbn1cblxuY29uc3QgdmVnYU9wdGlvbnMgPSB7XG4gIGNvbmZpZzoge1xuICAgIC8vIFZlZ2EtTGl0ZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb25cbiAgfSxcbiAgaW5pdDogKHZpZXcpID0+IHtcbiAgICAvLyBpbml0aWFsaXplIHRvb2x0aXAgaGFuZGxlclxuICAgIHZpZXcudG9vbHRpcChuZXcgdmVnYVRvb2x0aXAuSGFuZGxlcigpLmNhbGwpO1xuICB9LFxuICB2aWV3OiB7XG4gICAgcmVuZGVyZXI6IFwiY2FudmFzXCIsXG4gIH0sXG59O1xudmwucmVnaXN0ZXIodmVnYSwgdmVnYUxpdGUsIHZlZ2FPcHRpb25zKTtcblxuZXhwb3J0IGRlZmF1bHQgcGVycGV0cmF0b3JNYXBGdWxsO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==