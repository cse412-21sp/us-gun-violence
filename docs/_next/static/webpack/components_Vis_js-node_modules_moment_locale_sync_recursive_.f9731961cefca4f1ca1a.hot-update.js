self["webpackHotUpdate_N_E"]("components_Vis_js-node_modules_moment_locale_sync_recursive_",{

/***/ "./components/functions/tweetmapWA.js":
/*!********************************************!*\
  !*** ./components/functions/tweetmapWA.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vega */ "./node_modules/vega/build/vega.module.js");
/* harmony import */ var vega_lite_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vega-lite-api */ "./node_modules/vega-lite-api/src/index.js");
/* harmony import */ var vega_lite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vega-lite */ "./node_modules/vega-lite/build/src/index.js");
/* harmony import */ var vega_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vega-tooltip */ "./node_modules/vega-tooltip/build/vega-tooltip.module.js");
/* module decorator */ module = __webpack_require__.hmd(module);





function perpetratorMap(_ref) {
  var dataSet = _ref.dataSet,
      options = _ref.options;
  var wa = dataSet.wa,
      polar = dataSet.polar,
      usa = dataSet.usa;
  var titles = {
    mean_age: "Perpetrators mean age",
    underages_ratio: ["Percentage of underage/total", "perpetrators"],
    male_pctg: ["Percentage of ", "male perpetrators"],
    female_pctg: ["Percentage of ", "female perpetrators"]
  };
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.layer(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markGeoshape({
    fill: "#374151",
    stroke: "#fff",
    strokeWidth: 1
  }).data(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.topojson(usa).feature("counties")), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.markCircle({
    stroke: "#white"
  }).data(polar).transform(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.filter("datum['latitude'] != '0' && datum['longitude'] != '0'")).encode(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.latitude().fieldQ("latitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.longitude().fieldQ("longitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.color().fieldQ("comp").legend({
    titleLineHeight: 10
  }).scale({
    scheme: "redblue"
  }), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.size().fieldQ("n_killed").title(["Perpetrators/", "1M population/year"]), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.tooltip([vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldN("city_or_county"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldQ("comp"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldQ("latitude"), vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.fieldQ("longitude")]))).project(vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.projection("alberus"));
}

function perpetratorMapFull(_ref2) {
  var dataSet = _ref2.dataSet,
      options = _ref2.options;
  return vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.hconcat(perpetratorMap({
    dataSet: dataSet,
    options: options
  }).height(500).width(720)).config({
    mark: {
      opacity: 0.9
    },
    background: "#1f2937",
    axis: {
      titleFontSize: 16,
      tickColor: "white",
      labelColor: "white",
      titleColor: "white",
      gridColor: "white",
      domainColor: "white"
    },
    legend: {
      titleFontSize: 14,
      labelFontSize: 12,
      labelColor: "white",
      titleColor: "white",
      symbolFillColor: "#6b7280",
      symbolStrokeColor: "white"
    },
    scale: {
      maxSize: 50
    },
    view: {
      stroke: null
    }
  });
}

var vegaOptions = {
  config: {// Vega-Lite default configuration
  },
  init: function init(view) {
    // initialize tooltip handler
    view.tooltip(new vega_tooltip__WEBPACK_IMPORTED_MODULE_3__.Handler().call);
  },
  view: {
    renderer: "canvas"
  }
};
vega_lite_api__WEBPACK_IMPORTED_MODULE_1__.register(vega__WEBPACK_IMPORTED_MODULE_0__, vega_lite__WEBPACK_IMPORTED_MODULE_2__, vegaOptions);
/* harmony default export */ __webpack_exports__["default"] = (perpetratorMapFull);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9mdW5jdGlvbnMvdHdlZXRtYXBXQS5qcyJdLCJuYW1lcyI6WyJwZXJwZXRyYXRvck1hcCIsImRhdGFTZXQiLCJvcHRpb25zIiwid2EiLCJwb2xhciIsInVzYSIsInRpdGxlcyIsIm1lYW5fYWdlIiwidW5kZXJhZ2VzX3JhdGlvIiwibWFsZV9wY3RnIiwiZmVtYWxlX3BjdGciLCJ2bCIsImZpbGwiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsImRhdGEiLCJmZWF0dXJlIiwidHJhbnNmb3JtIiwiZW5jb2RlIiwiZmllbGRRIiwibGVnZW5kIiwidGl0bGVMaW5lSGVpZ2h0Iiwic2NhbGUiLCJzY2hlbWUiLCJ0aXRsZSIsInByb2plY3QiLCJwZXJwZXRyYXRvck1hcEZ1bGwiLCJoZWlnaHQiLCJ3aWR0aCIsImNvbmZpZyIsIm1hcmsiLCJvcGFjaXR5IiwiYmFja2dyb3VuZCIsImF4aXMiLCJ0aXRsZUZvbnRTaXplIiwidGlja0NvbG9yIiwibGFiZWxDb2xvciIsInRpdGxlQ29sb3IiLCJncmlkQ29sb3IiLCJkb21haW5Db2xvciIsImxhYmVsRm9udFNpemUiLCJzeW1ib2xGaWxsQ29sb3IiLCJzeW1ib2xTdHJva2VDb2xvciIsIm1heFNpemUiLCJ2aWV3IiwidmVnYU9wdGlvbnMiLCJpbml0IiwidG9vbHRpcCIsInZlZ2FUb29sdGlwIiwiY2FsbCIsInJlbmRlcmVyIiwidmVnYSIsInZlZ2FMaXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxjQUFULE9BQThDO0FBQUEsTUFBcEJDLE9BQW9CLFFBQXBCQSxPQUFvQjtBQUFBLE1BQVhDLE9BQVcsUUFBWEEsT0FBVztBQUFBLE1BQ3BDQyxFQURvQyxHQUNqQkYsT0FEaUIsQ0FDcENFLEVBRG9DO0FBQUEsTUFDaENDLEtBRGdDLEdBQ2pCSCxPQURpQixDQUNoQ0csS0FEZ0M7QUFBQSxNQUN6QkMsR0FE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O0FBQ0FBLFFBQUksQ0FBQ0csT0FBTCxDQUFhLElBQUlDLGlEQUFKLEdBQTBCQyxJQUF2QztBQUNELEdBUGlCO0FBUWxCTCxNQUFJLEVBQUU7QUFDSk0sWUFBUSxFQUFFO0FBRE47QUFSWSxDQUFwQjtBQVlBdkMsbURBQUEsQ0FBWXdDLGlDQUFaLEVBQWtCQyxzQ0FBbEIsRUFBNEJQLFdBQTVCO0FBRUEsK0RBQWVuQixrQkFBZiIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9jb21wb25lbnRzX1Zpc19qcy1ub2RlX21vZHVsZXNfbW9tZW50X2xvY2FsZV9zeW5jX3JlY3Vyc2l2ZV8uZjk3MzE5NjFjZWZjYTRmMWNhMWEuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHZlZ2EgZnJvbSBcInZlZ2FcIjtcbmltcG9ydCAqIGFzIHZsIGZyb20gXCJ2ZWdhLWxpdGUtYXBpXCI7XG5pbXBvcnQgKiBhcyB2ZWdhTGl0ZSBmcm9tIFwidmVnYS1saXRlXCI7XG5pbXBvcnQgKiBhcyB2ZWdhVG9vbHRpcCBmcm9tIFwidmVnYS10b29sdGlwXCI7XG5cbmZ1bmN0aW9uIHBlcnBldHJhdG9yTWFwKHsgZGF0YVNldCwgb3B0aW9ucyB9KSB7XG4gIGNvbnN0IHsgd2EsIHBvbGFyLCB1c2EgfSA9IGRhdGFTZXQ7XG4gIGNvbnN0IHRpdGxlcyA9IHtcbiAgICBtZWFuX2FnZTogXCJQZXJwZXRyYXRvcnMgbWVhbiBhZ2VcIixcbiAgICB1bmRlcmFnZXNfcmF0aW86IFtcIlBlcmNlbnRhZ2Ugb2YgdW5kZXJhZ2UvdG90YWxcIiwgXCJwZXJwZXRyYXRvcnNcIl0sXG4gICAgbWFsZV9wY3RnOiBbXCJQZXJjZW50YWdlIG9mIFwiLCBcIm1hbGUgcGVycGV0cmF0b3JzXCJdLFxuICAgIGZlbWFsZV9wY3RnOiBbXCJQZXJjZW50YWdlIG9mIFwiLCBcImZlbWFsZSBwZXJwZXRyYXRvcnNcIl0sXG4gIH07XG5cbiAgcmV0dXJuIHZsXG4gICAgLmxheWVyKFxuICAgICAgdmxcbiAgICAgICAgLm1hcmtHZW9zaGFwZSh7IGZpbGw6IFwiIzM3NDE1MVwiLCBzdHJva2U6IFwiI2ZmZlwiLCBzdHJva2VXaWR0aDogMSB9KVxuICAgICAgICAuZGF0YSh2bC50b3BvanNvbih1c2EpLmZlYXR1cmUoXCJjb3VudGllc1wiKSksXG4gICAgICB2bFxuICAgICAgICAubWFya0NpcmNsZSh7IHN0cm9rZTogXCIjd2hpdGVcIiB9KVxuICAgICAgICAuZGF0YShwb2xhcilcbiAgICAgICAgLnRyYW5zZm9ybShcbiAgICAgICAgICB2bC5maWx0ZXIoXCJkYXR1bVsnbGF0aXR1ZGUnXSAhPSAnMCcgJiYgZGF0dW1bJ2xvbmdpdHVkZSddICE9ICcwJ1wiKVxuICAgICAgICApXG4gICAgICAgIC5lbmNvZGUoXG4gICAgICAgICAgdmwubGF0aXR1ZGUoKS5maWVsZFEoXCJsYXRpdHVkZVwiKSxcbiAgICAgICAgICB2bC5sb25naXR1ZGUoKS5maWVsZFEoXCJsb25naXR1ZGVcIiksXG4gICAgICAgICAgdmxcbiAgICAgICAgICAgIC5jb2xvcigpXG4gICAgICAgICAgICAuZmllbGRRKFwiY29tcFwiKVxuICAgICAgICAgICAgLmxlZ2VuZCh7IHRpdGxlTGluZUhlaWdodDogMTAgfSlcbiAgICAgICAgICAgIC5zY2FsZSh7IHNjaGVtZTogXCJyZWRibHVlXCIgfSksXG4gICAgICAgICAgdmxcbiAgICAgICAgICAgIC5zaXplKClcbiAgICAgICAgICAgIC5maWVsZFEoXCJuX2tpbGxlZFwiKVxuICAgICAgICAgICAgLnRpdGxlKFtcIlBlcnBldHJhdG9ycy9cIiwgXCIxTSBwb3B1bGF0aW9uL3llYXJcIl0pLFxuICAgICAgICAgIHZsLnRvb2x0aXAoW1xuICAgICAgICAgICAgdmwuZmllbGROKFwiY2l0eV9vcl9jb3VudHlcIiksXG4gICAgICAgICAgICB2bC5maWVsZFEoXCJjb21wXCIpLFxuICAgICAgICAgICAgdmwuZmllbGRRKFwibGF0aXR1ZGVcIiksXG4gICAgICAgICAgICB2bC5maWVsZFEoXCJsb25naXR1ZGVcIiksXG4gICAgICAgICAgXSlcbiAgICAgICAgKVxuICAgIClcbiAgICAucHJvamVjdCh2bC5wcm9qZWN0aW9uKFwiYWxiZXJ1c1wiKSk7XG59XG5cbmZ1bmN0aW9uIHBlcnBldHJhdG9yTWFwRnVsbCh7IGRhdGFTZXQsIG9wdGlvbnMgfSkge1xuICByZXR1cm4gdmxcbiAgICAuaGNvbmNhdChwZXJwZXRyYXRvck1hcCh7IGRhdGFTZXQsIG9wdGlvbnMgfSkuaGVpZ2h0KDUwMCkud2lkdGgoNzIwKSlcbiAgICAuY29uZmlnKHtcbiAgICAgIG1hcms6IHsgb3BhY2l0eTogMC45IH0sXG4gICAgICBiYWNrZ3JvdW5kOiBcIiMxZjI5MzdcIixcbiAgICAgIGF4aXM6IHtcbiAgICAgICAgdGl0bGVGb250U2l6ZTogMTYsXG4gICAgICAgIHRpY2tDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICBsYWJlbENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIHRpdGxlQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgZ3JpZENvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIGRvbWFpbkNvbG9yOiBcIndoaXRlXCIsXG4gICAgICB9LFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIHRpdGxlRm9udFNpemU6IDE0LFxuICAgICAgICBsYWJlbEZvbnRTaXplOiAxMixcbiAgICAgICAgbGFiZWxDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICB0aXRsZUNvbG9yOiBcIndoaXRlXCIsXG4gICAgICAgIHN5bWJvbEZpbGxDb2xvcjogXCIjNmI3MjgwXCIsXG4gICAgICAgIHN5bWJvbFN0cm9rZUNvbG9yOiBcIndoaXRlXCIsXG4gICAgICB9LFxuICAgICAgc2NhbGU6IHsgbWF4U2l6ZTogNTAgfSxcbiAgICAgIHZpZXc6IHsgc3Ryb2tlOiBudWxsIH0sXG4gICAgfSk7XG59XG5cbmNvbnN0IHZlZ2FPcHRpb25zID0ge1xuICBjb25maWc6IHtcbiAgICAvLyBWZWdhLUxpdGUgZGVmYXVsdCBjb25maWd1cmF0aW9uXG4gIH0sXG4gIGluaXQ6ICh2aWV3KSA9PiB7XG4gICAgLy8gaW5pdGlhbGl6ZSB0b29sdGlwIGhhbmRsZXJcbiAgICB2aWV3LnRvb2x0aXAobmV3IHZlZ2FUb29sdGlwLkhhbmRsZXIoKS5jYWxsKTtcbiAgfSxcbiAgdmlldzoge1xuICAgIHJlbmRlcmVyOiBcImNhbnZhc1wiLFxuICB9LFxufTtcbnZsLnJlZ2lzdGVyKHZlZ2EsIHZlZ2FMaXRlLCB2ZWdhT3B0aW9ucyk7XG5cbmV4cG9ydCBkZWZhdWx0IHBlcnBldHJhdG9yTWFwRnVsbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=